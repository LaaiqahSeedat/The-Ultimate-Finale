//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group_MaskInc_FrontEnd.GroupServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentType", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class PaymentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentType_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentType_Id {
            get {
                return this.PaymentType_IdField;
            }
            set {
                if ((this.PaymentType_IdField.Equals(value) != true)) {
                    this.PaymentType_IdField = value;
                    this.RaisePropertyChanged("PaymentType_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User_Table", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class User_Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contact_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact_Number {
            get {
                return this.Contact_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact_NumberField, value) != true)) {
                    this.Contact_NumberField = value;
                    this.RaisePropertyChanged("Contact_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Created {
            get {
                return this.Date_CreatedField;
            }
            set {
                if ((this.Date_CreatedField.Equals(value) != true)) {
                    this.Date_CreatedField = value;
                    this.RaisePropertyChanged("Date_Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usertype {
            get {
                return this.UsertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsertypeField, value) != true)) {
                    this.UsertypeField = value;
                    this.RaisePropertyChanged("Usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Admin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Business_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Business_Type {
            get {
                return this.Business_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Business_TypeField, value) != true)) {
                    this.Business_TypeField = value;
                    this.RaisePropertyChanged("Business_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mask_Type", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Mask_Type : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Admin_User_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Mask_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Admin_User_Id {
            get {
                return this.Admin_User_IdField;
            }
            set {
                if ((this.Admin_User_IdField.Equals(value) != true)) {
                    this.Admin_User_IdField = value;
                    this.RaisePropertyChanged("Admin_User_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Created {
            get {
                return this.Date_CreatedField;
            }
            set {
                if ((this.Date_CreatedField.Equals(value) != true)) {
                    this.Date_CreatedField = value;
                    this.RaisePropertyChanged("Date_Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mask_Id {
            get {
                return this.Mask_IdField;
            }
            set {
                if ((this.Mask_IdField.Equals(value) != true)) {
                    this.Mask_IdField = value;
                    this.RaisePropertyChanged("Mask_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order_Table", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Order_Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Delivery_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Order_DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Order_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Order_ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Order_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Order_TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Order_TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Order_dateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delivery_Id {
            get {
                return this.Delivery_IdField;
            }
            set {
                if ((this.Delivery_IdField.Equals(value) != true)) {
                    this.Delivery_IdField = value;
                    this.RaisePropertyChanged("Delivery_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Order_Discount {
            get {
                return this.Order_DiscountField;
            }
            set {
                if ((this.Order_DiscountField.Equals(value) != true)) {
                    this.Order_DiscountField = value;
                    this.RaisePropertyChanged("Order_Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_Id {
            get {
                return this.Order_IdField;
            }
            set {
                if ((this.Order_IdField.Equals(value) != true)) {
                    this.Order_IdField = value;
                    this.RaisePropertyChanged("Order_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Order_Quantity {
            get {
                return this.Order_QuantityField;
            }
            set {
                if ((this.Order_QuantityField.Equals(value) != true)) {
                    this.Order_QuantityField = value;
                    this.RaisePropertyChanged("Order_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Order_Shipping {
            get {
                return this.Order_ShippingField;
            }
            set {
                if ((this.Order_ShippingField.Equals(value) != true)) {
                    this.Order_ShippingField = value;
                    this.RaisePropertyChanged("Order_Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order_Status {
            get {
                return this.Order_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.Order_StatusField, value) != true)) {
                    this.Order_StatusField = value;
                    this.RaisePropertyChanged("Order_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Order_Tax {
            get {
                return this.Order_TaxField;
            }
            set {
                if ((this.Order_TaxField.Equals(value) != true)) {
                    this.Order_TaxField = value;
                    this.RaisePropertyChanged("Order_Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Order_Total {
            get {
                return this.Order_TotalField;
            }
            set {
                if ((this.Order_TotalField.Equals(value) != true)) {
                    this.Order_TotalField = value;
                    this.RaisePropertyChanged("Order_Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Order_date {
            get {
                return this.Order_dateField;
            }
            set {
                if ((this.Order_dateField.Equals(value) != true)) {
                    this.Order_dateField = value;
                    this.RaisePropertyChanged("Order_date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order_Item", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Order_Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_Item_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_Id {
            get {
                return this.Order_IdField;
            }
            set {
                if ((this.Order_IdField.Equals(value) != true)) {
                    this.Order_IdField = value;
                    this.RaisePropertyChanged("Order_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_Item_Id {
            get {
                return this.Order_Item_IdField;
            }
            set {
                if ((this.Order_Item_IdField.Equals(value) != true)) {
                    this.Order_Item_IdField = value;
                    this.RaisePropertyChanged("Order_Item_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Admin_User_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Mask_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Product_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Unit_PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Admin_User_Id {
            get {
                return this.Admin_User_IdField;
            }
            set {
                if ((this.Admin_User_IdField.Equals(value) != true)) {
                    this.Admin_User_IdField = value;
                    this.RaisePropertyChanged("Admin_User_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Created {
            get {
                return this.Date_CreatedField;
            }
            set {
                if ((this.Date_CreatedField.Equals(value) != true)) {
                    this.Date_CreatedField = value;
                    this.RaisePropertyChanged("Date_Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mask_Id {
            get {
                return this.Mask_IdField;
            }
            set {
                if ((this.Mask_IdField.Equals(value) != true)) {
                    this.Mask_IdField = value;
                    this.RaisePropertyChanged("Mask_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Product_Quantity {
            get {
                return this.Product_QuantityField;
            }
            set {
                if ((this.Product_QuantityField.Equals(value) != true)) {
                    this.Product_QuantityField = value;
                    this.RaisePropertyChanged("Product_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Unit_Price {
            get {
                return this.Unit_PriceField;
            }
            set {
                if ((this.Unit_PriceField.Equals(value) != true)) {
                    this.Unit_PriceField = value;
                    this.RaisePropertyChanged("Unit_Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Custom_Product", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Custom_Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Client_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomProduct_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom_SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Client_ID {
            get {
                return this.Client_IDField;
            }
            set {
                if ((this.Client_IDField.Equals(value) != true)) {
                    this.Client_IDField = value;
                    this.RaisePropertyChanged("Client_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colour {
            get {
                return this.ColourField;
            }
            set {
                if ((object.ReferenceEquals(this.ColourField, value) != true)) {
                    this.ColourField = value;
                    this.RaisePropertyChanged("Colour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomProduct_Id {
            get {
                return this.CustomProduct_IdField;
            }
            set {
                if ((this.CustomProduct_IdField.Equals(value) != true)) {
                    this.CustomProduct_IdField = value;
                    this.RaisePropertyChanged("CustomProduct_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom_Size {
            get {
                return this.Custom_SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.Custom_SizeField, value) != true)) {
                    this.Custom_SizeField = value;
                    this.RaisePropertyChanged("Custom_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((this.FilterField.Equals(value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Size_Table", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Size_Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Size_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size_Id {
            get {
                return this.Size_IdField;
            }
            set {
                if ((this.Size_IdField.Equals(value) != true)) {
                    this.Size_IdField = value;
                    this.RaisePropertyChanged("Size_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Size", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Product_Size : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Size_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size_Id {
            get {
                return this.Size_IdField;
            }
            set {
                if ((this.Size_IdField.Equals(value) != true)) {
                    this.Size_IdField = value;
                    this.RaisePropertyChanged("Size_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Delivery", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Delivery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Delivery_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Time_NeededField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delivery_Id {
            get {
                return this.Delivery_IdField;
            }
            set {
                if ((this.Delivery_IdField.Equals(value) != true)) {
                    this.Delivery_IdField = value;
                    this.RaisePropertyChanged("Delivery_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time_Needed {
            get {
                return this.Time_NeededField;
            }
            set {
                if ((object.ReferenceEquals(this.Time_NeededField, value) != true)) {
                    this.Time_NeededField = value;
                    this.RaisePropertyChanged("Time_Needed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/Group_Project")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Client_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client_Id {
            get {
                return this.Client_IdField;
            }
            set {
                if ((this.Client_IdField.Equals(value) != true)) {
                    this.Client_IdField = value;
                    this.RaisePropertyChanged("Client_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GroupServiceReference.IGroupService")]
    public interface IGroupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/getPaymentTypes", ReplyAction="http://tempuri.org/IGroupService/getPaymentTypesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.PaymentType[] getPaymentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/getPaymentTypes", ReplyAction="http://tempuri.org/IGroupService/getPaymentTypesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.PaymentType[]> getPaymentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Login", ReplyAction="http://tempuri.org/IGroupService/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Login", ReplyAction="http://tempuri.org/IGroupService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetUser", ReplyAction="http://tempuri.org/IGroupService/GetUserResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.User_Table GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetUser", ReplyAction="http://tempuri.org/IGroupService/GetUserResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.User_Table> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetEmail", ReplyAction="http://tempuri.org/IGroupService/GetEmailResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.User_Table GetEmail(string email, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetEmail", ReplyAction="http://tempuri.org/IGroupService/GetEmailResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.User_Table> GetEmailAsync(string email, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAdmin", ReplyAction="http://tempuri.org/IGroupService/GetAdminResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Admin GetAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAdmin", ReplyAction="http://tempuri.org/IGroupService/GetAdminResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Admin> GetAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetClient", ReplyAction="http://tempuri.org/IGroupService/GetClientResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Client GetClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetClient", ReplyAction="http://tempuri.org/IGroupService/GetClientResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Client> GetClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Register", ReplyAction="http://tempuri.org/IGroupService/RegisterResponse")]
        string Register(string username, string password, string name, string email, string contactno, int active, string address, string surname, string businesstype, string usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Register", ReplyAction="http://tempuri.org/IGroupService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string username, string password, string name, string email, string contactno, int active, string address, string surname, string businesstype, string usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/UpdateInfo", ReplyAction="http://tempuri.org/IGroupService/UpdateInfoResponse")]
        string UpdateInfo(string username, string name, string email, string contactno, string address, int id, string surname, string businesstype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/UpdateInfo", ReplyAction="http://tempuri.org/IGroupService/UpdateInfoResponse")]
        System.Threading.Tasks.Task<string> UpdateInfoAsync(string username, string name, string email, string contactno, string address, int id, string surname, string businesstype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetMask", ReplyAction="http://tempuri.org/IGroupService/GetMaskResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type GetMask(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetMask", ReplyAction="http://tempuri.org/IGroupService/GetMaskResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type> GetMaskAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Changepassword", ReplyAction="http://tempuri.org/IGroupService/ChangepasswordResponse")]
        string Changepassword(string email, int id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Changepassword", ReplyAction="http://tempuri.org/IGroupService/ChangepasswordResponse")]
        System.Threading.Tasks.Task<string> ChangepasswordAsync(string email, int id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteUser", ReplyAction="http://tempuri.org/IGroupService/DeleteUserResponse")]
        string DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteUser", ReplyAction="http://tempuri.org/IGroupService/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddGuest", ReplyAction="http://tempuri.org/IGroupService/AddGuestResponse")]
        string AddGuest(int id, string names, string address, int orderid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddGuest", ReplyAction="http://tempuri.org/IGroupService/AddGuestResponse")]
        System.Threading.Tasks.Task<string> AddGuestAsync(int id, string names, string address, int orderid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoice", ReplyAction="http://tempuri.org/IGroupService/GetInvoiceResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table GetInvoice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoice", ReplyAction="http://tempuri.org/IGroupService/GetInvoiceResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table> GetInvoiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetItem", ReplyAction="http://tempuri.org/IGroupService/GetItemResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item GetItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetItem", ReplyAction="http://tempuri.org/IGroupService/GetItemResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item> GetItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallitems", ReplyAction="http://tempuri.org/IGroupService/GetallitemsResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[] Getallitems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallitems", ReplyAction="http://tempuri.org/IGroupService/GetallitemsResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[]> GetallitemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetallInvoices", ReplyAction="http://tempuri.org/IGroupService/GetallInvoicesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetallInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetallInvoices", ReplyAction="http://tempuri.org/IGroupService/GetallInvoicesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetallInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoicebyclient", ReplyAction="http://tempuri.org/IGroupService/GetInvoicebyclientResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetInvoicebyclient(int clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoicebyclient", ReplyAction="http://tempuri.org/IGroupService/GetInvoicebyclientResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetInvoicebyclientAsync(int clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoicebbydate", ReplyAction="http://tempuri.org/IGroupService/GetInvoicebbydateResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetInvoicebbydate(System.DateTime d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetInvoicebbydate", ReplyAction="http://tempuri.org/IGroupService/GetInvoicebbydateResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetInvoicebbydateAsync(System.DateTime d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addproducts", ReplyAction="http://tempuri.org/IGroupService/AddproductsResponse")]
        string Addproducts(string name, string description, decimal price, int active, int maskid, int admin, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addproducts", ReplyAction="http://tempuri.org/IGroupService/AddproductsResponse")]
        System.Threading.Tasks.Task<string> AddproductsAsync(string name, string description, decimal price, int active, int maskid, int admin, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editproduct", ReplyAction="http://tempuri.org/IGroupService/EditproductResponse")]
        string Editproduct(string name, string description, decimal price, int id, int active, int maskid, int admin, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editproduct", ReplyAction="http://tempuri.org/IGroupService/EditproductResponse")]
        System.Threading.Tasks.Task<string> EditproductAsync(string name, string description, decimal price, int id, int active, int maskid, int admin, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addtype", ReplyAction="http://tempuri.org/IGroupService/AddtypeResponse")]
        string Addtype(string name, string description, int admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addtype", ReplyAction="http://tempuri.org/IGroupService/AddtypeResponse")]
        System.Threading.Tasks.Task<string> AddtypeAsync(string name, string description, int admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Edittype", ReplyAction="http://tempuri.org/IGroupService/EdittypeResponse")]
        string Edittype(string name, string description, int admin, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Edittype", ReplyAction="http://tempuri.org/IGroupService/EdittypeResponse")]
        System.Threading.Tasks.Task<string> EdittypeAsync(string name, string description, int admin, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addsize", ReplyAction="http://tempuri.org/IGroupService/AddsizeResponse")]
        string Addsize(string name, string dimensions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addsize", ReplyAction="http://tempuri.org/IGroupService/AddsizeResponse")]
        System.Threading.Tasks.Task<string> AddsizeAsync(string name, string dimensions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editsize", ReplyAction="http://tempuri.org/IGroupService/EditsizeResponse")]
        string Editsize(string name, string dimen, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editsize", ReplyAction="http://tempuri.org/IGroupService/EditsizeResponse")]
        System.Threading.Tasks.Task<string> EditsizeAsync(string name, string dimen, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addpsize", ReplyAction="http://tempuri.org/IGroupService/AddpsizeResponse")]
        string Addpsize(int sizeid, int psize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addpsize", ReplyAction="http://tempuri.org/IGroupService/AddpsizeResponse")]
        System.Threading.Tasks.Task<string> AddpsizeAsync(int sizeid, int psize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Updatepsize", ReplyAction="http://tempuri.org/IGroupService/UpdatepsizeResponse")]
        string Updatepsize(int sizeid, int psize, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Updatepsize", ReplyAction="http://tempuri.org/IGroupService/UpdatepsizeResponse")]
        System.Threading.Tasks.Task<string> UpdatepsizeAsync(int sizeid, int psize, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addcustom", ReplyAction="http://tempuri.org/IGroupService/AddcustomResponse")]
        string Addcustom(int filter, string size, string colour, string imageURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Addcustom", ReplyAction="http://tempuri.org/IGroupService/AddcustomResponse")]
        System.Threading.Tasks.Task<string> AddcustomAsync(int filter, string size, string colour, string imageURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editcustom", ReplyAction="http://tempuri.org/IGroupService/EditcustomResponse")]
        string Editcustom(int filter, string size, string colour, int _ID, string imageURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Editcustom", ReplyAction="http://tempuri.org/IGroupService/EditcustomResponse")]
        System.Threading.Tasks.Task<string> EditcustomAsync(int filter, string size, string colour, int _ID, string imageURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallproducts", ReplyAction="http://tempuri.org/IGroupService/GetallproductsResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product[] Getallproducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallproducts", ReplyAction="http://tempuri.org/IGroupService/GetallproductsResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetallproductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetallMasktypes", ReplyAction="http://tempuri.org/IGroupService/GetallMasktypesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type[] GetallMasktypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetallMasktypes", ReplyAction="http://tempuri.org/IGroupService/GetallMasktypesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type[]> GetallMasktypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProduct", ReplyAction="http://tempuri.org/IGroupService/GetProductResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProduct", ReplyAction="http://tempuri.org/IGroupService/GetProductResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getcustom", ReplyAction="http://tempuri.org/IGroupService/GetcustomResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Custom_Product Getcustom(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getcustom", ReplyAction="http://tempuri.org/IGroupService/GetcustomResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Custom_Product> GetcustomAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getsize", ReplyAction="http://tempuri.org/IGroupService/GetsizeResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table Getsize(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getsize", ReplyAction="http://tempuri.org/IGroupService/GetsizeResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table> GetsizeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductsize", ReplyAction="http://tempuri.org/IGroupService/GetproductsizeResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size Getproductsize(int pid, int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductsize", ReplyAction="http://tempuri.org/IGroupService/GetproductsizeResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size> GetproductsizeAsync(int pid, int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Deletesize", ReplyAction="http://tempuri.org/IGroupService/DeletesizeResponse")]
        string Deletesize(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Deletesize", ReplyAction="http://tempuri.org/IGroupService/DeletesizeResponse")]
        System.Threading.Tasks.Task<string> DeletesizeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeletePsize", ReplyAction="http://tempuri.org/IGroupService/DeletePsizeResponse")]
        string DeletePsize(int pid, int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeletePsize", ReplyAction="http://tempuri.org/IGroupService/DeletePsizeResponse")]
        System.Threading.Tasks.Task<string> DeletePsizeAsync(int pid, int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteMaskt", ReplyAction="http://tempuri.org/IGroupService/DeleteMasktResponse")]
        string DeleteMaskt(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteMaskt", ReplyAction="http://tempuri.org/IGroupService/DeleteMasktResponse")]
        System.Threading.Tasks.Task<string> DeleteMasktAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Deletecustom", ReplyAction="http://tempuri.org/IGroupService/DeletecustomResponse")]
        string Deletecustom(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Deletecustom", ReplyAction="http://tempuri.org/IGroupService/DeletecustomResponse")]
        System.Threading.Tasks.Task<string> DeletecustomAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProductsbycategory", ReplyAction="http://tempuri.org/IGroupService/GetProductsbycategoryResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetProductsbycategory(int maskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProductsbycategory", ReplyAction="http://tempuri.org/IGroupService/GetProductsbycategoryResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetProductsbycategoryAsync(int maskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteProduct", ReplyAction="http://tempuri.org/IGroupService/DeleteProductResponse")]
        string DeleteProduct(int P_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteProduct", ReplyAction="http://tempuri.org/IGroupService/DeleteProductResponse")]
        System.Threading.Tasks.Task<string> DeleteProductAsync(int P_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductbyprice", ReplyAction="http://tempuri.org/IGroupService/GetproductbypriceResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product[] Getproductbyprice(decimal min, decimal max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductbyprice", ReplyAction="http://tempuri.org/IGroupService/GetproductbypriceResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetproductbypriceAsync(decimal min, decimal max);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductbysize", ReplyAction="http://tempuri.org/IGroupService/GetproductbysizeResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[] Getproductbysize(int sizeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getproductbysize", ReplyAction="http://tempuri.org/IGroupService/GetproductbysizeResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[]> GetproductbysizeAsync(int sizeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getsproductsize", ReplyAction="http://tempuri.org/IGroupService/GetsproductsizeResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size Getsproductsize(int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getsproductsize", ReplyAction="http://tempuri.org/IGroupService/GetsproductsizeResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size> GetsproductsizeAsync(int sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallsizes", ReplyAction="http://tempuri.org/IGroupService/GetallsizesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table[] Getallsizes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallsizes", ReplyAction="http://tempuri.org/IGroupService/GetallsizesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table[]> GetallsizesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallproductsizes", ReplyAction="http://tempuri.org/IGroupService/GetallproductsizesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[] Getallproductsizes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getallproductsizes", ReplyAction="http://tempuri.org/IGroupService/GetallproductsizesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[]> GetallproductsizesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddAdmin", ReplyAction="http://tempuri.org/IGroupService/AddAdminResponse")]
        string AddAdmin(Group_MaskInc_FrontEnd.GroupServiceReference.User_Table user, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddAdmin", ReplyAction="http://tempuri.org/IGroupService/AddAdminResponse")]
        System.Threading.Tasks.Task<string> AddAdminAsync(Group_MaskInc_FrontEnd.GroupServiceReference.User_Table user, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getcategorybyname", ReplyAction="http://tempuri.org/IGroupService/GetcategorybynameResponse")]
        string Getcategorybyname(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/Getcategorybyname", ReplyAction="http://tempuri.org/IGroupService/GetcategorybynameResponse")]
        System.Threading.Tasks.Task<string> GetcategorybynameAsync(string name);
        
        // CODEGEN: Generating message contract since the wrapper name (getAllItems) of message getAllItemsRequest does not match the default value (getAllItems1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/getAllItems", ReplyAction="http://tempuri.org/IGroupService/getAllItemsResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse getAllItems1(Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/getAllItems", ReplyAction="http://tempuri.org/IGroupService/getAllItemsResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse> getAllItems1Async(Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProductsByMask_Type", ReplyAction="http://tempuri.org/IGroupService/GetProductsByMask_TypeResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetProductsByMask_Type(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetProductsByMask_Type", ReplyAction="http://tempuri.org/IGroupService/GetProductsByMask_TypeResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetProductsByMask_TypeAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllDeliveries", ReplyAction="http://tempuri.org/IGroupService/GetAllDeliveriesResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[] GetAllDeliveries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllDeliveries", ReplyAction="http://tempuri.org/IGroupService/GetAllDeliveriesResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[]> GetAllDeliveriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveriesForClient", ReplyAction="http://tempuri.org/IGroupService/GetDeliveriesForClientResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[] GetDeliveriesForClient(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveriesForClient", ReplyAction="http://tempuri.org/IGroupService/GetDeliveriesForClientResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[]> GetDeliveriesForClientAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveriesByCompany", ReplyAction="http://tempuri.org/IGroupService/GetDeliveriesByCompanyResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetDeliveriesByCompany(int DeliveryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveriesByCompany", ReplyAction="http://tempuri.org/IGroupService/GetDeliveriesByCompanyResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetDeliveriesByCompanyAsync(int DeliveryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveryForOrder", ReplyAction="http://tempuri.org/IGroupService/GetDeliveryForOrderResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Delivery GetDeliveryForOrder(int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDeliveryForOrder", ReplyAction="http://tempuri.org/IGroupService/GetDeliveryForOrderResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery> GetDeliveryForOrderAsync(int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDelivery", ReplyAction="http://tempuri.org/IGroupService/GetDeliveryResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Delivery GetDelivery(int DeliveryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetDelivery", ReplyAction="http://tempuri.org/IGroupService/GetDeliveryResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery> GetDeliveryAsync(int DeliveryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/EditFromCart", ReplyAction="http://tempuri.org/IGroupService/EditFromCartResponse")]
        bool EditFromCart(int ClientId, int ProductID, int quantity, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/EditFromCart", ReplyAction="http://tempuri.org/IGroupService/EditFromCartResponse")]
        System.Threading.Tasks.Task<bool> EditFromCartAsync(int ClientId, int ProductID, int quantity, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetCartItem", ReplyAction="http://tempuri.org/IGroupService/GetCartItemResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Cart GetCartItem(int ClientID, int Prod_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetCartItem", ReplyAction="http://tempuri.org/IGroupService/GetCartItemResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Cart> GetCartItemAsync(int ClientID, int Prod_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllCartItemsForClient", ReplyAction="http://tempuri.org/IGroupService/GetAllCartItemsForClientResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Cart[] GetAllCartItemsForClient(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllCartItemsForClient", ReplyAction="http://tempuri.org/IGroupService/GetAllCartItemsForClientResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Cart[]> GetAllCartItemsForClientAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllProductsInCart", ReplyAction="http://tempuri.org/IGroupService/GetAllProductsInCartResponse")]
        Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetAllProductsInCart(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllProductsInCart", ReplyAction="http://tempuri.org/IGroupService/GetAllProductsInCartResponse")]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetAllProductsInCartAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/RemoveFromCart", ReplyAction="http://tempuri.org/IGroupService/RemoveFromCartResponse")]
        bool RemoveFromCart(int ClientId, int ProdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/RemoveFromCart", ReplyAction="http://tempuri.org/IGroupService/RemoveFromCartResponse")]
        System.Threading.Tasks.Task<bool> RemoveFromCartAsync(int ClientId, int ProdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/ClearTheCart", ReplyAction="http://tempuri.org/IGroupService/ClearTheCartResponse")]
        bool ClearTheCart(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/ClearTheCart", ReplyAction="http://tempuri.org/IGroupService/ClearTheCartResponse")]
        System.Threading.Tasks.Task<bool> ClearTheCartAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CalculateTotalPrice", ReplyAction="http://tempuri.org/IGroupService/CalculateTotalPriceResponse")]
        decimal CalculateTotalPrice(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CalculateTotalPrice", ReplyAction="http://tempuri.org/IGroupService/CalculateTotalPriceResponse")]
        System.Threading.Tasks.Task<decimal> CalculateTotalPriceAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CalculateTotalQuantity", ReplyAction="http://tempuri.org/IGroupService/CalculateTotalQuantityResponse")]
        int CalculateTotalQuantity(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CalculateTotalQuantity", ReplyAction="http://tempuri.org/IGroupService/CalculateTotalQuantityResponse")]
        System.Threading.Tasks.Task<int> CalculateTotalQuantityAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/placeOrder", ReplyAction="http://tempuri.org/IGroupService/placeOrderResponse")]
        bool placeOrder(int userId, int shipping, int paymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/placeOrder", ReplyAction="http://tempuri.org/IGroupService/placeOrderResponse")]
        System.Threading.Tasks.Task<bool> placeOrderAsync(int userId, int shipping, int paymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/makePayment", ReplyAction="http://tempuri.org/IGroupService/makePaymentResponse")]
        int makePayment(string cardNum, string cvv, string expiry, string cardHolder, string payType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/makePayment", ReplyAction="http://tempuri.org/IGroupService/makePaymentResponse")]
        System.Threading.Tasks.Task<int> makePaymentAsync(string cardNum, string cvv, string expiry, string cardHolder, string payType);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllItems", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllItemsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int orderID;
        
        public getAllItemsRequest() {
        }
        
        public getAllItemsRequest(int orderID) {
            this.orderID = orderID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllItemsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[] getAllItemsResult;
        
        public getAllItemsResponse() {
        }
        
        public getAllItemsResponse(Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[] getAllItemsResult) {
            this.getAllItemsResult = getAllItemsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGroupServiceChannel : Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GroupServiceClient : System.ServiceModel.ClientBase<Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService>, Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService {
        
        public GroupServiceClient() {
        }
        
        public GroupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.PaymentType[] getPaymentTypes() {
            return base.Channel.getPaymentTypes();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.PaymentType[]> getPaymentTypesAsync() {
            return base.Channel.getPaymentTypesAsync();
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.User_Table GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.User_Table> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.User_Table GetEmail(string email, int id) {
            return base.Channel.GetEmail(email, id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.User_Table> GetEmailAsync(string email, int id) {
            return base.Channel.GetEmailAsync(email, id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Admin GetAdmin(int id) {
            return base.Channel.GetAdmin(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Admin> GetAdminAsync(int id) {
            return base.Channel.GetAdminAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Client GetClient(int id) {
            return base.Channel.GetClient(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Client> GetClientAsync(int id) {
            return base.Channel.GetClientAsync(id);
        }
        
        public string Register(string username, string password, string name, string email, string contactno, int active, string address, string surname, string businesstype, string usertype) {
            return base.Channel.Register(username, password, name, email, contactno, active, address, surname, businesstype, usertype);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string username, string password, string name, string email, string contactno, int active, string address, string surname, string businesstype, string usertype) {
            return base.Channel.RegisterAsync(username, password, name, email, contactno, active, address, surname, businesstype, usertype);
        }
        
        public string UpdateInfo(string username, string name, string email, string contactno, string address, int id, string surname, string businesstype) {
            return base.Channel.UpdateInfo(username, name, email, contactno, address, id, surname, businesstype);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInfoAsync(string username, string name, string email, string contactno, string address, int id, string surname, string businesstype) {
            return base.Channel.UpdateInfoAsync(username, name, email, contactno, address, id, surname, businesstype);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type GetMask(int id) {
            return base.Channel.GetMask(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type> GetMaskAsync(int id) {
            return base.Channel.GetMaskAsync(id);
        }
        
        public string Changepassword(string email, int id, string password) {
            return base.Channel.Changepassword(email, id, password);
        }
        
        public System.Threading.Tasks.Task<string> ChangepasswordAsync(string email, int id, string password) {
            return base.Channel.ChangepasswordAsync(email, id, password);
        }
        
        public string DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public string AddGuest(int id, string names, string address, int orderid) {
            return base.Channel.AddGuest(id, names, address, orderid);
        }
        
        public System.Threading.Tasks.Task<string> AddGuestAsync(int id, string names, string address, int orderid) {
            return base.Channel.AddGuestAsync(id, names, address, orderid);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table GetInvoice(int id) {
            return base.Channel.GetInvoice(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table> GetInvoiceAsync(int id) {
            return base.Channel.GetInvoiceAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item GetItem(int id) {
            return base.Channel.GetItem(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item> GetItemAsync(int id) {
            return base.Channel.GetItemAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[] Getallitems() {
            return base.Channel.Getallitems();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[]> GetallitemsAsync() {
            return base.Channel.GetallitemsAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetallInvoices() {
            return base.Channel.GetallInvoices();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetallInvoicesAsync() {
            return base.Channel.GetallInvoicesAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetInvoicebyclient(int clientid) {
            return base.Channel.GetInvoicebyclient(clientid);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetInvoicebyclientAsync(int clientid) {
            return base.Channel.GetInvoicebyclientAsync(clientid);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetInvoicebbydate(System.DateTime d) {
            return base.Channel.GetInvoicebbydate(d);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetInvoicebbydateAsync(System.DateTime d) {
            return base.Channel.GetInvoicebbydateAsync(d);
        }
        
        public string Addproducts(string name, string description, decimal price, int active, int maskid, int admin, int quantity) {
            return base.Channel.Addproducts(name, description, price, active, maskid, admin, quantity);
        }
        
        public System.Threading.Tasks.Task<string> AddproductsAsync(string name, string description, decimal price, int active, int maskid, int admin, int quantity) {
            return base.Channel.AddproductsAsync(name, description, price, active, maskid, admin, quantity);
        }
        
        public string Editproduct(string name, string description, decimal price, int id, int active, int maskid, int admin, int quantity) {
            return base.Channel.Editproduct(name, description, price, id, active, maskid, admin, quantity);
        }
        
        public System.Threading.Tasks.Task<string> EditproductAsync(string name, string description, decimal price, int id, int active, int maskid, int admin, int quantity) {
            return base.Channel.EditproductAsync(name, description, price, id, active, maskid, admin, quantity);
        }
        
        public string Addtype(string name, string description, int admin) {
            return base.Channel.Addtype(name, description, admin);
        }
        
        public System.Threading.Tasks.Task<string> AddtypeAsync(string name, string description, int admin) {
            return base.Channel.AddtypeAsync(name, description, admin);
        }
        
        public string Edittype(string name, string description, int admin, int id) {
            return base.Channel.Edittype(name, description, admin, id);
        }
        
        public System.Threading.Tasks.Task<string> EdittypeAsync(string name, string description, int admin, int id) {
            return base.Channel.EdittypeAsync(name, description, admin, id);
        }
        
        public string Addsize(string name, string dimensions) {
            return base.Channel.Addsize(name, dimensions);
        }
        
        public System.Threading.Tasks.Task<string> AddsizeAsync(string name, string dimensions) {
            return base.Channel.AddsizeAsync(name, dimensions);
        }
        
        public string Editsize(string name, string dimen, int id) {
            return base.Channel.Editsize(name, dimen, id);
        }
        
        public System.Threading.Tasks.Task<string> EditsizeAsync(string name, string dimen, int id) {
            return base.Channel.EditsizeAsync(name, dimen, id);
        }
        
        public string Addpsize(int sizeid, int psize) {
            return base.Channel.Addpsize(sizeid, psize);
        }
        
        public System.Threading.Tasks.Task<string> AddpsizeAsync(int sizeid, int psize) {
            return base.Channel.AddpsizeAsync(sizeid, psize);
        }
        
        public string Updatepsize(int sizeid, int psize, int id) {
            return base.Channel.Updatepsize(sizeid, psize, id);
        }
        
        public System.Threading.Tasks.Task<string> UpdatepsizeAsync(int sizeid, int psize, int id) {
            return base.Channel.UpdatepsizeAsync(sizeid, psize, id);
        }
        
        public string Addcustom(int filter, string size, string colour, string imageURL) {
            return base.Channel.Addcustom(filter, size, colour, imageURL);
        }
        
        public System.Threading.Tasks.Task<string> AddcustomAsync(int filter, string size, string colour, string imageURL) {
            return base.Channel.AddcustomAsync(filter, size, colour, imageURL);
        }
        
        public string Editcustom(int filter, string size, string colour, int _ID, string imageURL) {
            return base.Channel.Editcustom(filter, size, colour, _ID, imageURL);
        }
        
        public System.Threading.Tasks.Task<string> EditcustomAsync(int filter, string size, string colour, int _ID, string imageURL) {
            return base.Channel.EditcustomAsync(filter, size, colour, _ID, imageURL);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product[] Getallproducts() {
            return base.Channel.Getallproducts();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetallproductsAsync() {
            return base.Channel.GetallproductsAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type[] GetallMasktypes() {
            return base.Channel.GetallMasktypes();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Mask_Type[]> GetallMasktypesAsync() {
            return base.Channel.GetallMasktypesAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Custom_Product Getcustom(int id) {
            return base.Channel.Getcustom(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Custom_Product> GetcustomAsync(int id) {
            return base.Channel.GetcustomAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table Getsize(int id) {
            return base.Channel.Getsize(id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table> GetsizeAsync(int id) {
            return base.Channel.GetsizeAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size Getproductsize(int pid, int sid) {
            return base.Channel.Getproductsize(pid, sid);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size> GetproductsizeAsync(int pid, int sid) {
            return base.Channel.GetproductsizeAsync(pid, sid);
        }
        
        public string Deletesize(int id) {
            return base.Channel.Deletesize(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletesizeAsync(int id) {
            return base.Channel.DeletesizeAsync(id);
        }
        
        public string DeletePsize(int pid, int sid) {
            return base.Channel.DeletePsize(pid, sid);
        }
        
        public System.Threading.Tasks.Task<string> DeletePsizeAsync(int pid, int sid) {
            return base.Channel.DeletePsizeAsync(pid, sid);
        }
        
        public string DeleteMaskt(int id) {
            return base.Channel.DeleteMaskt(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMasktAsync(int id) {
            return base.Channel.DeleteMasktAsync(id);
        }
        
        public string Deletecustom(int id) {
            return base.Channel.Deletecustom(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletecustomAsync(int id) {
            return base.Channel.DeletecustomAsync(id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetProductsbycategory(int maskid) {
            return base.Channel.GetProductsbycategory(maskid);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetProductsbycategoryAsync(int maskid) {
            return base.Channel.GetProductsbycategoryAsync(maskid);
        }
        
        public string DeleteProduct(int P_Id) {
            return base.Channel.DeleteProduct(P_Id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductAsync(int P_Id) {
            return base.Channel.DeleteProductAsync(P_Id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product[] Getproductbyprice(decimal min, decimal max) {
            return base.Channel.Getproductbyprice(min, max);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetproductbypriceAsync(decimal min, decimal max) {
            return base.Channel.GetproductbypriceAsync(min, max);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[] Getproductbysize(int sizeid) {
            return base.Channel.Getproductbysize(sizeid);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[]> GetproductbysizeAsync(int sizeid) {
            return base.Channel.GetproductbysizeAsync(sizeid);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size Getsproductsize(int sid) {
            return base.Channel.Getsproductsize(sid);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size> GetsproductsizeAsync(int sid) {
            return base.Channel.GetsproductsizeAsync(sid);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table[] Getallsizes() {
            return base.Channel.Getallsizes();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Size_Table[]> GetallsizesAsync() {
            return base.Channel.GetallsizesAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[] Getallproductsizes() {
            return base.Channel.Getallproductsizes();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product_Size[]> GetallproductsizesAsync() {
            return base.Channel.GetallproductsizesAsync();
        }
        
        public string AddAdmin(Group_MaskInc_FrontEnd.GroupServiceReference.User_Table user, string surname) {
            return base.Channel.AddAdmin(user, surname);
        }
        
        public System.Threading.Tasks.Task<string> AddAdminAsync(Group_MaskInc_FrontEnd.GroupServiceReference.User_Table user, string surname) {
            return base.Channel.AddAdminAsync(user, surname);
        }
        
        public string Getcategorybyname(string name) {
            return base.Channel.Getcategorybyname(name);
        }
        
        public System.Threading.Tasks.Task<string> GetcategorybynameAsync(string name) {
            return base.Channel.GetcategorybynameAsync(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService.getAllItems1(Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest request) {
            return base.Channel.getAllItems1(request);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Item[] getAllItems1(int orderID) {
            Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest inValue = new Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest();
            inValue.orderID = orderID;
            Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse retVal = ((Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService)(this)).getAllItems1(inValue);
            return retVal.getAllItemsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse> Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService.getAllItems1Async(Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest request) {
            return base.Channel.getAllItems1Async(request);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsResponse> getAllItems1Async(int orderID) {
            Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest inValue = new Group_MaskInc_FrontEnd.GroupServiceReference.getAllItemsRequest();
            inValue.orderID = orderID;
            return ((Group_MaskInc_FrontEnd.GroupServiceReference.IGroupService)(this)).getAllItems1Async(inValue);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetProductsByMask_Type(string Name) {
            return base.Channel.GetProductsByMask_Type(Name);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetProductsByMask_TypeAsync(string Name) {
            return base.Channel.GetProductsByMask_TypeAsync(Name);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[] GetAllDeliveries() {
            return base.Channel.GetAllDeliveries();
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[]> GetAllDeliveriesAsync() {
            return base.Channel.GetAllDeliveriesAsync();
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[] GetDeliveriesForClient(int ClientID) {
            return base.Channel.GetDeliveriesForClient(ClientID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery[]> GetDeliveriesForClientAsync(int ClientID) {
            return base.Channel.GetDeliveriesForClientAsync(ClientID);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[] GetDeliveriesByCompany(int DeliveryID) {
            return base.Channel.GetDeliveriesByCompany(DeliveryID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Order_Table[]> GetDeliveriesByCompanyAsync(int DeliveryID) {
            return base.Channel.GetDeliveriesByCompanyAsync(DeliveryID);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Delivery GetDeliveryForOrder(int orderID) {
            return base.Channel.GetDeliveryForOrder(orderID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery> GetDeliveryForOrderAsync(int orderID) {
            return base.Channel.GetDeliveryForOrderAsync(orderID);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Delivery GetDelivery(int DeliveryID) {
            return base.Channel.GetDelivery(DeliveryID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Delivery> GetDeliveryAsync(int DeliveryID) {
            return base.Channel.GetDeliveryAsync(DeliveryID);
        }
        
        public bool EditFromCart(int ClientId, int ProductID, int quantity, decimal price) {
            return base.Channel.EditFromCart(ClientId, ProductID, quantity, price);
        }
        
        public System.Threading.Tasks.Task<bool> EditFromCartAsync(int ClientId, int ProductID, int quantity, decimal price) {
            return base.Channel.EditFromCartAsync(ClientId, ProductID, quantity, price);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Cart GetCartItem(int ClientID, int Prod_Id) {
            return base.Channel.GetCartItem(ClientID, Prod_Id);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Cart> GetCartItemAsync(int ClientID, int Prod_Id) {
            return base.Channel.GetCartItemAsync(ClientID, Prod_Id);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Cart[] GetAllCartItemsForClient(int ClientID) {
            return base.Channel.GetAllCartItemsForClient(ClientID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Cart[]> GetAllCartItemsForClientAsync(int ClientID) {
            return base.Channel.GetAllCartItemsForClientAsync(ClientID);
        }
        
        public Group_MaskInc_FrontEnd.GroupServiceReference.Product[] GetAllProductsInCart(int ClientID) {
            return base.Channel.GetAllProductsInCart(ClientID);
        }
        
        public System.Threading.Tasks.Task<Group_MaskInc_FrontEnd.GroupServiceReference.Product[]> GetAllProductsInCartAsync(int ClientID) {
            return base.Channel.GetAllProductsInCartAsync(ClientID);
        }
        
        public bool RemoveFromCart(int ClientId, int ProdID) {
            return base.Channel.RemoveFromCart(ClientId, ProdID);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveFromCartAsync(int ClientId, int ProdID) {
            return base.Channel.RemoveFromCartAsync(ClientId, ProdID);
        }
        
        public bool ClearTheCart(int ClientID) {
            return base.Channel.ClearTheCart(ClientID);
        }
        
        public System.Threading.Tasks.Task<bool> ClearTheCartAsync(int ClientID) {
            return base.Channel.ClearTheCartAsync(ClientID);
        }
        
        public decimal CalculateTotalPrice(int ClientID) {
            return base.Channel.CalculateTotalPrice(ClientID);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateTotalPriceAsync(int ClientID) {
            return base.Channel.CalculateTotalPriceAsync(ClientID);
        }
        
        public int CalculateTotalQuantity(int ClientID) {
            return base.Channel.CalculateTotalQuantity(ClientID);
        }
        
        public System.Threading.Tasks.Task<int> CalculateTotalQuantityAsync(int ClientID) {
            return base.Channel.CalculateTotalQuantityAsync(ClientID);
        }
        
        public bool placeOrder(int userId, int shipping, int paymentId) {
            return base.Channel.placeOrder(userId, shipping, paymentId);
        }
        
        public System.Threading.Tasks.Task<bool> placeOrderAsync(int userId, int shipping, int paymentId) {
            return base.Channel.placeOrderAsync(userId, shipping, paymentId);
        }
        
        public int makePayment(string cardNum, string cvv, string expiry, string cardHolder, string payType) {
            return base.Channel.makePayment(cardNum, cvv, expiry, cardHolder, payType);
        }
        
        public System.Threading.Tasks.Task<int> makePaymentAsync(string cardNum, string cvv, string expiry, string cardHolder, string payType) {
            return base.Channel.makePaymentAsync(cardNum, cvv, expiry, cardHolder, payType);
        }
    }
}
